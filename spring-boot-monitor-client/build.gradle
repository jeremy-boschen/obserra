plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    // Spring Boot dependencies (minimal set)
    compileOnly 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.springframework.boot:spring-boot-starter-web'
    
    // Spring Boot Auto Configuration
    compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Create a sources jar
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

// Create a javadoc jar
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

// Configure Maven publishing
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            
            pom {
                name = 'Spring Boot Monitor Client'
                description = 'Client library for Spring Boot applications to register with the monitoring dashboard'
                url = 'https://github.com/yourusername/spring-boot-monitor'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'your-id'
                        name = 'Your Name'
                        email = 'your.email@example.com'
                    }
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}

// Disable the Spring Boot application plugin to build as a library
bootJar {
    enabled = false
}

// Enable the java library jar
jar {
    enabled = true
    
    // Ensure auto-configuration metadata is included
    from('build/classes/java/main') {
        include 'META-INF/**'
    }
}