# Service status enum
enum ServiceStatus {
  UP
  DOWN
  WARNING
  UNKNOWN
}

# Service type
type Service {
  id: ID!
  app: String!
  name: String!
  version: String
  namespace: String
  status: ServiceStatus!
  updated: String! # should be a datetime
  insights: ServiceInsights
}

# Service insights type
type ServiceInsights {
  health: HealthInsight!
  metrics: MetricsInsight!
}

# Health insight type
type HealthInsight {
  status: String!
  components: [HealthComponentEntry!]
}

# Health component entry type (for map representation)
type HealthComponentEntry {
  name: String!
  component: HealthComponent!
}

# Health component type
type HealthComponent {
  status: String!
  details: Object
}

# Metrics insight type
type MetricsInsight {
  memory: MemoryInsight!
  cpu: CPUInsight!
  threads: ThreadInsight!
  uptime: UptimeInsight!
  disk: DiskInsight!
  threadPool: ThreadPoolInsight!
}

# Memory metrics type
type MemoryInsight {
  max: String
  committed: String
  used: String
  liveDataSize: String
  maxDataSize: String
  usagePercentage: Int
}

# CPU metrics type
type CPUInsight {
  processUsage: Int
  systemUsage: Int
  availableProcessors: Int
}

# Thread metrics type
type ThreadInsight {
  liveThreads: Int
  daemonThreads: Int
  peakThreads: Int
}

# Uptime metrics type
type UptimeInsight {
  uptime: String
  startTime: String
}

# Disk metrics type
type DiskInsight {
  total: String
  free: String
  usable: String
  usagePercentage: Int
}

# Thread pool metrics type
type ThreadPoolInsight {
  poolSize: String
  activeThreads: String
  corePoolSize: String
  maxPoolSize: String
  queuedTasks: String
  usagePercentage: Int
}

# Root query type
type Query {
  # Get all services
  services: [Service!]!

  # Get a specific service by ID
  service(id: ID!): Service
}

# Using the Object scalar from ExtendedScalars for complex objects like maps
scalar Object
